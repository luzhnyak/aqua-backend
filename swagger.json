{
  "openapi": "3.0.1",
  "info": {
    "version": "Beta",
    "title": "Swagger test backend water app",
    "description": "Here you can test and see what routes are on our server"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://aqua-backend-ieu7.onrender.com/" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization user endpoints"
    },
    {
      "name": "Waters",
      "description": "Water control endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Users"],
        "summary": "User verification email",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": "true",
            "type": "string",
            "description": "Verification's token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySendTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "Resend verification token",
        "parameters": [],
        "requestBody": {
          "description": "Resend verification object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendVerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "User current",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "post": {
        "tags": ["Users"],
        "summary": "Upload image",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add image",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddAvatarsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAvatarsResponse"
                }
              }
            }
          },
          "400": {
            "description": "File is not found.",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/{month}": {
      "get": {
        "tags": ["Waters"],
        "summary": "Total amount of Water drink per month",
        "parameters": [
          {
            "in": "path",
            "name": "month",
            "required": "true",
            "type": "string",
            "description": "Month on which must be provided"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthWaterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/{today}": {
      "get": {
        "tags": ["Waters"],
        "summary": "Total amount of Water drink per day",
        "parameters": [
          {
            "in": "path",
            "name": "today",
            "required": "true",
            "type": "string",
            "description": "Day on which must be provided"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayWaterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": ["Waters"],
        "summary": "Adding more water to drink",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Waters object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/{orderId}": {
      "put": {
        "tags": ["Waters"],
        "summary": "Editing more water to drink",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": "true",
            "type": "string",
            "description": "Id water drink"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Waters object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Waters"],
        "summary": "Deleted data water to drink",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": "true",
            "type": "string",
            "description": "Id water drink"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWaterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },
        "example": {
          "user": {
            "email": "user@example.com"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "verify": {
                "type": "boolean",
                "description": "User's status verify"
              },
              "verificationToken": {
                "type": "string",
                "description": "Verifivation's token or null"
              },
              "createdAt": {
                "type": "string",
                "description": "Date created"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date update"
              },
              "waterRate": {
                "type": "number",
                "description": "Water daily norm"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User token"
          }
        },
        "example": {
          "user": {
            "_id": "example9b3dfc0a5762658a",
            "email": "user@example.com",
            "verify": true,
            "verificationToken": null,
            "createdAt": "2024-01-26T18:15:16.852Z",
            "updatedAt": "2024-01-26T19:56:22.198Z",
            "waterRate": 2000
          },

          "token": "string.string.string"
        }
      },
      "VerifySendTokenResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Verification successful"
          }
        },
        "example": {
          "message": "Verification successful"
        }
      },
      "ResendVerifyRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "ResendVerifyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Verification email sent"
          }
        },
        "example": {
          "message": "Verification email sent"
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "waterRate": {
                "type": "number",
                "description": "Water daily norm"
              }
            }
          }
        },
        "example": {
          "user": {
            "_id": "example9b3dfc0a5762658a",
            "email": "user@example.com",
            "waterRate": 2000
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The user is logged out."
          }
        },
        "example": {
          "message": "The user is logged out."
        }
      },
      "AddAvatarsRequest": {
        "type": "object",
        "required": ["avatars"],
        "properties": {
          "avatars": {
            "type": "file",
            "format": "binary"
          }
        }
      },
      "AddWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id drink water"
          },
          "waterVolume": {
            "type": "number",
            "description": "Amount of water drink"
          },
          "time": {
            "type": "string",
            "description": "Time of drinking water"
          }
        },
        "example": {
          "_id": "example9b3dfc0a5762658a",
          "waterVolume": 300,
          "time": "8:00"
        }
      },
      "AddWaterRequest": {
        "type": "object",
        "required": ["waterVolume", "time"],
        "properties": {
          "waterVolume": {
            "type": "number",
            "description": "Amount of water drink",
            "example": 300
          },
          "time": {
            "type": "string",
            "description": "Time of drinking water",
            "example": "08:00"
          }
        }
      },
      "EditWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id drink water"
          },
          "date": {
            "type": "string",
            "description": "Date edit drink water"
          },
          "waterVolume": {
            "type": "number",
            "description": "Amount of water drink"
          },
          "time": {
            "type": "string",
            "description": "Time of drinking water"
          }
        },
        "example": {
          "_id": "example9b3dfc0a5762658a",
          "date": "20-04-2023",
          "waterVolume": 300,
          "time": "8:00"
        }
      },
      "EditWaterRequest": {
        "type": "object",
        "required": ["waterVolume", "time"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Edit date of water drink",
            "example": "20-04-2023"
          },
          "waterVolume": {
            "type": "number",
            "description": "Edit amount of water drink",
            "example": 300
          },
          "time": {
            "type": "string",
            "description": "Edit time of drinking water",
            "example": "08:00"
          }
        }
      },
      "DeleteWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id drink water"
          },
          "date": {
            "type": "string",
            "description": "Date edit drink water"
          },
          "waterVolume": {
            "type": "number",
            "description": "Amount of water drink"
          },
          "time": {
            "type": "string",
            "description": "Time of drinking water"
          }
        },
        "example": {
          "_id": "example9b3dfc0a5762658a",
          "date": "20-04-2023",
          "waterVolume": 300,
          "time": "8:00"
        }
      },
      "TodayWaterResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id drink water"
            },
            "date": {
              "type": "string",
              "description": "Date edit drink water"
            },
            "waterVolume": {
              "type": "number",
              "description": "Amount of water drink"
            },
            "time": {
              "type": "string",
              "description": "Time of drinking water"
            }
          }
        },
        "example": [
          {
            "_id": "example9b3dfc0a5762658a",
            "date": "20-04-2023",
            "waterVolume": 300,
            "time": "8:00"
          },
          {
            "_id": "example9b3dfc0a5745678a",
            "date": "20-04-2023",
            "waterVolume": 500,
            "time": "9:00"
          },
          {
            "_id": "example9b3dfc0a5712348a",
            "date": "20-04-2023",
            "waterVolume": 600,
            "time": "10:00"
          }
        ]
      },
      "MonthWaterResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "dateDay": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Id drink water"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date edit drink water"
                  },
                  "waterVolume": {
                    "type": "number",
                    "description": "Amount of water drink"
                  },
                  "time": {
                    "type": "string",
                    "description": "Time of drinking water"
                  }
                }
              }
            }
          }
        },
        "example": [
          {
            "20-04-2023": [
              {
                "_id": "example9b3dfc0a5762658a",
                "date": "20-04-2023",
                "waterVolume": 300,
                "time": "8:00"
              },
              {
                "_id": "example9b3dfc0a5745678a",
                "date": "20-04-2023",
                "waterVolume": 500,
                "time": "9:00"
              },
              {
                "_id": "example9b3dfc0a5712348a",
                "date": "20-04-2023",
                "waterVolume": 600,
                "time": "10:00"
              }
            ]
          },
          {
            "21-04-2023": [
              {
                "_id": "example9b3dfc0a522658a",
                "date": "21-04-2023",
                "waterVolume": 400,
                "time": "8:00"
              },
              {
                "_id": "example9b3dfc0a5234278a",
                "date": "21-04-2023",
                "waterVolume": 200,
                "time": "9:00"
              },
              {
                "_id": "example9b3dfc0a5723448a",
                "date": "21-04-2023",
                "waterVolume": 800,
                "time": "10:00"
              }
            ]
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
