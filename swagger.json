{
  "openapi": "3.0.1",
  "info": {
    "version": "Beta",
    "title": "Swagger test backend water app",
    "description": "Here you can test and see what routes are on our server"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "https://aqua-backend-ieu7.onrender.com/" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization user endpoints"
    },
    {
      "name": "Waters",
      "description": "Water control endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Users"],
        "summary": "User verification email",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": "true",
            "type": "string",
            "description": "Verification's token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifySendTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "Resend verification token",
        "parameters": [],
        "requestBody": {
          "description": "Resend verification object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendVerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "User current",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Upload image",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add image",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "File is not found.",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/water-rate": {
      "patch": {
        "tags": ["Users"],
        "summary": "User update water rate",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update water rate object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWaterRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWaterRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/update-user": {
      "put": {
        "tags": ["Users"],
        "summary": "User update profile",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update user's profile",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "tags": ["Users"],
        "summary": "Send change password instructions",
        "parameters": [],
        "requestBody": {
          "description": "Email user object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/forgot-password/{changePasswordToken}": {
      "post": {
        "tags": ["Users"],
        "summary": "User change password",
        "parameters": [
          {
            "in": "path",
            "name": "changePasswordToken",
            "required": "true",
            "type": "string",
            "description": "User's token change password"
          }
        ],
        "requestBody": {
          "description": "New object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Verification token has already been passed",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": ["Waters"],
        "summary": "Total amount of Water drink per month",
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "required": "true",
            "description": "The year for which water data is requested",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example":"2024"
          },
          {
            "in": "query",
            "name": "month",
            "description": "The month for which water data is requested",
            "required": true,
            "schema": {
              "type": "string"
            },
             "example":"February"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthWaterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/{date}": {
      "get": {
        "tags": ["Waters"],
        "summary": "Total amount of Water drink per day",
        "parameters": [ {
            "in": "path",
            "name": "date",
            "required": "true",
            "type": "string",
            "description": "Day for which you want to receive information on the water consumed",
            "example":"3-February-2024"
          }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayWaterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": ["Waters"],
        "summary": "Adding more water to drink",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Waters object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/water/{dayId}/{entryId}": {
      "put": {
        "tags": ["Waters"],
        "summary": "Editing more water to drink",
        "parameters": [
          {
            "in": "path",
            "name": "dayId",
            "required": "true",
            "type": "string",
            "description": "Day id"
          },
           {
            "in": "path",
            "name": "entryId",
            "required": "true",
            "type": "string",
            "description": "Water entry id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Waters object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Waters"],
        "summary": "Deleted data water to drink",
        "parameters": [
          {
            "in": "path",
            "name": "dayId",
            "required": "true",
            "type": "string",
            "description": "Day id"
          },
           {
            "in": "path",
            "name": "entryId",
            "required": "true",
            "type": "string",
            "description": "Water entry id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWaterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },
        "example": {
          "user": {
            "email": "user@example.com"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "gender": {
                "type": "string",
                "description": "User's status gender"
              },
               "name": {
                "type": "string",
                "description": "User's name"
              },
              "waterRate": {
                "type": "number",
                "description": "Water daily norm"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url"
              },
              "createdAt": {
                "type":"string",
                "description":"User date create"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User token"
          }
        },
        "example": {
          "user": {
            "email": "user@example.com",
            "gender": "female",
            "name":"Ricardo",
            "waterRate": 2000,
            "avatarURL": "https://res.example.com/useravatar/image/upload/v1706358664/avatars/example-avatar-string.png",
            "createdAt": "2024-01-31T14:39:07.408Z"
          },

          "token": "string.string.string"
        }
      },
      "VerifySendTokenResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Verification successful"
          }
        },
        "example": {
          "message": "Verification successful"
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "ForgotPasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Password reset instructions have been sent to your email"
          }
        },
        "example": {
          "message": "Password reset instructions have been sent to your email"
        }
      },
    
      "ChangePasswordRequest": {
        "type": "object",
        "required": ["newPassword"],
        "properties": {
          "newPassword": {
            "type": "string",
            "description": "New user's email",
            "example": "qwerty111"
          }
        }
      },
      "ChangePasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Password changed successfully"
          }
        },
        "example": {
          "message": "Password changed successfully"
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name":{
                "type":"string",
                "description":"User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "gender": {
                "type": "string",
                "description": "User's status gender"
              },
              "waterRate": {
                "type": "number",
                "description": "Water daily norm"
              },
              "avatarURL":{
                "type":"string",
                "description":"User's avatar url"
              },
              "createdAt":{
                "type":"string",
                "description":"User date create",
                "format":"date"
              }
            }
          }
        },
        "example": {
          "user": {
            "name":"Ricardo",
            "email": "user@example.com",
            "gender": "female",
            "waterRate": 2000,
            "avatarURL":"https://res.example.com/useravatar/image/upload/v1706358664/avatars/example-avatar-string.png"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The user is logged out."
          }
        },
        "example": {
          "message": "The user is logged out."
        }
      },
      "AddAvatarRequest": {
        "type": "object",
        "required": ["avatar"],
        "properties": {
          "avatar": {
            "type": "file",
            "format": "binary"
          }
        }
      },
      "AddAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "Avatar url."
          }
        },
        "example": {
          "avatarURL": "https://res.example.com/useravatar/image/upload/v1706358664/avatars/example-avatar-string.png"
        }
      },
      "ResendVerifyRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "ResendVerifyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Verification email sent"
          }
        },
        "example": {
          "message": "Verification email sent"
        }
      },
      "UpdateWaterRateRequest": {
        "type": "object",
        "required": ["waterRate"],
        "properties": {
          "waterRate": {
            "type": "string",
            "description": "User's water rate",
            "example": 3000
          }
        }
      },
      "UpdateWaterRateResponse": {
        "type": "object",
        "properties": {
          "waterRate": {
            "type": "number",
            "description": "Water daily norm"
          }
        },
        "example": {
            "waterRate": 2000    
        }
      },
      "UpdateUserProfileRequest": {
        "type": "object",
        "required": ["gender", "name", "email"],
        "properties": {
          "gender": {
            "type": "string",
            "description": "User's gender update",
            "example": "female"
          },
          "name": {
            "type": "string",
            "description": "User's name update",
            "example": "Pavlo"
          },
          "email": {
            "type": "string",
            "description": "User's email update",
            "format": "email"
          }, 
          "password": {
            "type": "string",
            "description": "User's password update, if so, field newPassword required",
            "example": "qwerty123"
          }, 
          "newPassword": {
            "type": "string",
            "description": "Required field for password field",
            "example": "qwerty111"
          }
        }
      },
      "UpdateUserProfileResponse": {
        "type": "object",
        "properties": {
         "user":{
           "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "gender": {
            "type": "string",
            "description": "User's status gender"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          }
         },
         "message":{
          "type":"string",
          "description":"Updated password success message "
         }
        },
        "example": {
          "user":{
          "email": "user@example.com",
          "gender": "female",
          "name": "Pavlo"  
        },
        "message":"Password changed successfully"
        }
      },
      "AddWaterResponse": {
        "type": "object",
        "properties": {
         "_id": {
              "type": "string",
              "description": "Id day"
            },
            "date": {
              "type": "string",
              "description": "Date drink water"
            },
            "waterRate":{
              "type":"number",
              "description":"User's water rate"
            },
            "totalVolume": {
              "type": "number",
              "description": "Total amount of water drink in this day"
            },
            "progress": {
              "type": "number",
              "description": "The user's progress in drinking the daily amount of water in percent"
            },
            "dailyEntries":{
               "type":"array",
              "items":{
                "type":"object",
                "properties":{
                  "waterVolume":{
                    "type":"number",
                    "description":"Amount of water drink"
                  },
                  "time":{
                    "type":"string",
                    "description":"Time when water unit was drunk"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Id drink water"
                  }
                }
              }
            },
            "owner":{
              "type":"string",
              "description":"User id"
            },
            "_id": {
              "type": "string",
              "description": "Id drink water"
            },
            "createdAt":{
              "type":"string",
              "description":"Time created"
            },
            "updatedAt":{
              "type":"string",
              "description":"Time updated"
            }

          }
        ,
        "example": {
  "_id":"example4b9facd90d2d9fee",
  "date": "3 February 2024",
  "waterRate": 1000,
  "totalVolume": 800,
  "progress": 80,
  "dailyEntries": [
    {
      "waterVolume": 300,
      "time": "08:00",
      "_id": "examplea4b9facd90d2d9fef"
    },
    {
      "waterVolume": 500,
      "_id": "example4b9facd90d2d9fee",
      "time": "08:00",
      "_id": "example4b9facd90d2d9ff4"
    }
  ],
  "owner": "exampleb2e66b216b806256",
  "createdAt": "2024-01-30T15:49:14.101Z",
  "updatedAt": "2024-01-30T15:49:33.161Z"
}
      },
      "AddWaterRequest": {
        "type": "object",
        "required": ["waterVolume", "time"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Day",
            "example": "3 February 2024"
          },
          "water": {
            "type": "object",
            "properties":{
              "waterVolume":{
                "type":"string",
                "description":"Amount of water drink",
                "example":"100"
              },
              "time":{
                "type":"string",
                "description":"Time when water unit was drunk",
                "example":"08:00"
              }
              
            }
          }
        }
      },
      "EditWaterResponse": {
        "type": "object",
        "properties": {
            "_id": {
              "type": "string",
              "description": "Id drink water"
            },
            "date": {
              "type": "string",
              "description": "Date drink water"
            },
            "waterRate":{
              "type":"number",
              "description":"User's water rate"
            },
            "totalVolume": {
              "type": "number",
              "description": "Total amount of water drink in this day"
            },
            "progress": {
              "type": "number",
              "description": "The user's progress in drinking the daily amount of water in percent"
            },
            "dailyEntries":{
               "type":"array",
              "items":{
                "type":"object",
                "properties":{
                  "waterVolume":{
                    "type":"number",
                    "description":"Amount of water drink"
                  },
                  "time":{
                    "type":"string",
                    "description":"Time when water unit was drunk"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Id drink water"
                  }
                }
              }
            },
            "owner":{
              "type":"string",
              "description":"User id"
            },
            "createdAt":{
              "type":"string",
              "description":"Time created"
            },
            "updatedAt":{
              "type":"string",
              "description":"Time updated"
            }

          },
        "example": {
  "_id": "example4b9facd90d2d9fee",
  "date": "2024-01-30T15:49:13.954Z",
  "waterRate": 1000,
  "totalVolume": 800,
  "progress": 80,
  "dailyEntries": [
    {
      "waterVolume": 300,
      "time": "08:00",
      "_id": "examplea4b9facd90d2d9fef"
    },
    {
      "waterVolume": 500,
      "time": "08:00",
      "_id": "example4b9facd90d2d9ff4"
    }
  ],
  "owner": "exampleb2e66b216b806256",
  "createdAt": "2024-01-30T15:49:14.101Z",
  "updatedAt": "2024-01-30T15:49:33.161Z"
}
      },
      "EditWaterRequest": {
        "type": "object",
        "required": ["waterVolume", "time"],
        "properties": {
          "waterVolume": {
            "type": "number",
            "description": "Edit amount of water drink",
            "example": 300
          },
          "time": {
            "type": "string",
            "description": "Edit time of drinking water",
            "example": "08:00"
          }
        }
      },
      "DeleteWaterResponse": {
        "type": "object",
       "properties": {
            "_id": {
              "type": "string",
              "description": "Id drink water"
            },
            "date": {
              "type": "string",
              "description": "Date drink water"
            },
            "waterRate":{
              "type":"number",
              "description":"User's water rate"
            },
            "totalVolume": {
              "type": "number",
              "description": "Total amount of water drink in this day"
            },
            "progress": {
              "type": "number",
              "description": "The user's progress in drinking the daily amount of water in percent"
            },
            "dailyEntries":{
               "type":"array",
              "items":{
                "type":"object",
                "properties":{
                  "waterVolume":{
                    "type":"number",
                    "description":"Amount of water drink"
                  },
                  "time":{
                    "type":"string",
                    "description":"Time when water unit was drunk"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Id drink water"
                  }
                }
              }
            },
            "owner":{
              "type":"string",
              "description":"User id"
            },
            "createdAt":{
              "type":"string",
              "description":"Time created"
            },
            "updatedAt":{
              "type":"string",
              "description":"Time updated"
            }

          }
        ,
        "example": {
  "_id": "example4b9facd90d2d9fee",
  "date": "2024-01-30T15:49:13.954Z",
  "waterRate": 1000,
  "totalVolume": 800,
  "progress": 80,
  "dailyEntries": [
    {
      "waterVolume": 300,
      "time": "08:00",
      "_id": "examplea4b9facd90d2d9fef"
    },
    {
      "waterVolume": 500,
      "time": "08:00",
      "_id": "example4b9facd90d2d9ff4"
    }
  ],
  "owner": "exampleb2e66b216b806256",
  "createdAt": "2024-01-30T15:49:14.101Z",
  "updatedAt": "2024-01-30T15:49:33.161Z"
}
      },
      "TodayWaterResponse": {
        "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id drink water"
            },
            "date": {
              "type": "string",
              "description": "Date drink water"
            },
            "waterRate":{
              "type":"number",
              "description":"User's water rate"
            },
            "totalVolume": {
              "type": "number",
              "description": "Total amount of water drink in this day"
            },
            "progress": {
              "type": "number",
              "description": "The user's progress in drinking the daily amount of water in percent"
            },
            "dailyEntries":{
               "type":"array",
              "items":{
                "type":"object",
                "properties":{
                  "waterVolume":{
                    "type":"number",
                    "description":"Amount of water drink"
                  },
                  "time":{
                    "type":"string",
                    "description":"Time when water unit was drunk"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Id drink water"
                  }
                }
              }
            },
            "owner":{
              "type":"string",
              "description":"User id"
            },
            "createdAt":{
              "type":"string",
              "description":"Time created"
            },
            "updatedAt":{
              "type":"string",
              "description":"Time updated"
            }

          }
        ,
        "example": {
  "_id": "example4b9facd90d2d9fee",
  "date": "3 February 2024",
  "waterRate": 1000,
  "totalVolume": 800,
  "progress": 80,
  "dailyEntries": [
    {
      "waterVolume": 300,
      "time": "08:00",
      "_id": "examplea4b9facd90d2d9fef"
    },
    {
      "waterVolume": 500,
      "time": "08:00",
      "_id": "example4b9facd90d2d9ff4"
    }
  ],
  "owner": "exampleb2e66b216b806256",
  "createdAt": "2024-01-30T15:49:14.101Z",
  "updatedAt": "2024-01-30T15:49:33.161Z"
}
      },
      "MonthWaterResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id":{
              "type":"string",
              "description": "Id drink water"
            },
            "date":{
              "type":"string",
              "description": "Date edit drink water"
            },
            "waterRate":{
              "type":"number",
              "description": "Daily rate of water in liters"
            },
            "progress":{
              "type":"number",
              "description":"The user's progress in drinking the daily amount of water in percent"
            },
            "dailyEntries":{
              "type":"number",
              "description":"The number of essences of pods drunk"
            }
          }
        },
        "example": [
  {
    "_id": "example9b3dfc0a5762658a",
    "date": "4, February",
    "waterRate": 2,
    "progress": 120,
    "dailyEntries": 6
  },
   {
    "_id": "example9b3dfc0a5762658a",
    "date": "4, February",
    "waterRate": 2,
    "progress": 100,
    "dailyEntries": 5
  }
]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
